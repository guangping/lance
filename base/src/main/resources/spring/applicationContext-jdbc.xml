<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
       default-autowire="byName" default-lazy-init="false">
    <!--开启AOP监听-->
    <aop:aspectj-autoproxy/>

    <!-- 属性文件读入 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:${JDBC_HOME}jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!--
        <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="${jndiName}"/>
        </bean>
    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${initialSize}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxActive" value="${maxActive}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${maxWait}"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${logAbandoned}"/>
        <!-- 打开PSCache 5.5以上，并且指定每个连接上PSCache的大小
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="10"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>     -->
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计  监控统计用的filter:stat
                日志用的filter:log4j
               防御SQL注入的filter:wall -->
        <property name="filters" value="${druid.filters}"/>
    </bean>
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
    <bean id="defaultDAO" class="com.framework.database.impl.DefaultDAOImpl"/>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"/>
    <bean id="springContextHolder" class="com.framework.spring.SpringContextHolder" lazy-init="false"/>


    <!-- 支持 @Transactional 标记  事物控制-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <tx:advice id="transactionManagerAdivice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"
                       isolation="READ_COMMITTED"
                       propagation="REQUIRED"
                       rollback-for="java.lang.RuntimeException"/>
        </tx:attributes>
    </tx:advice>


</beans>
